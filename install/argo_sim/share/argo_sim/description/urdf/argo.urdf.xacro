<?xml version="1.0"?>
<robot
  xmlns:xacro="http://www.ros.org/wiki/xacro"
  name="argo_sim">

  <!--
xmlns:gazebo="http://playerstage.sourceforge.net/gazebo/xmlschema/#gz"
  xmlns:model="http://playerstage.sourceforge.net/gazebo/xmlschema/#model"
  xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
  xmlns:body="http://playerstage.sourceforge.net/gazebo/xmlschema/#body"
  xmlns:geom="http://playerstage.sourceforge.net/gazebo/xmlschema/#geom"
  xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#joint"
  xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
  xmlns:rendering="http://playerstage.sourceforge.net/gazebo/xmlschema/#rendering"
  xmlns:physics="http://playerstage.sourceforge.net/gazebo/xmlschema/#physics"
-->
  <xacro:property name="chassis_length" value="2.0" />
  <xacro:property name="chassis_width" value="1.4" />
  <xacro:property name="chassis_height" value="0.5" />
  <xacro:property name="wheel_width" value="0.3" />
  <xacro:property name="wheel_radius" value="0.25" />
  <xacro:property name="ground_clearance" value="0.25" />
  <xacro:property name="chassis_to_wheel" value="0.35" />
  <xacro:property name="front_rear_axle_dist" value="1.2" />
  <xacro:property name="axle_width" value="1.2" />
  <xacro:property name="laser_tilt" value="9.9" />
  <xacro:property name="rgbd_tilt" value="11.0" />
  <xacro:property name="top_platform" value="1.9" />

  <xacro:property name="PI" value="3.14159265359" />

  <material name="Grey">
    <color rgba="0.8 0.8 0.8 1.0"/>
  </material>
  <material name="Black">
    <color rgba="0 0 0 1.0"/>
  </material>
  <material name="Yellow">
    <color rgba="1.0 1.0 0 1.0"/>
  </material>
  <material name="Green">
    <color rgba="0.0 0.4 0.0 1.0"/>
  </material>

  <!-- 
  This creates the wheels and their axles.

  prefix is to give the wheels different names: front_right, front_left,
  centre_right, centre_left, rear_right and rear_left
  front is 1 for front and -1 for rear
  side is 1 for right, -1 for left
  -->
  <xacro:macro name="wheel" params="prefix front side">
    <!-- Wheel -->
    <link name="${prefix}_wheel">
     <collision>
       <origin rpy="${pi/2} 0 0" />
       <geometry>
         <cylinder length="${wheel_width}" radius="${wheel_radius}" />
       </geometry>
       <surface>
         <friction>
           <ode>
             <mu>1.0</mu>
             <mu2>1.0</mu2>
           </ode>
           <torsional>
             <ode/>
           </torsional>
         </friction>
         <contact>
           <ode/>
         </contact>
         <bounce/>
       </surface>
     </collision>
     <visual>
        <origin rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder length="${wheel_width}" radius="${wheel_radius}" />
        </geometry>
        <material name="Black"/>
      </visual>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="8"/>
        <inertia
          ixx="2.0" ixy="0.0" ixz="0.0"
                    iyy="2.0" iyz="0.0"
                              izz="2.0"/>
      </inertial>
    </link>
    <gazebo reference="${prefix}_wheel">
      <kp>500000.0</kp>
      <kd>100.0</kd>
      <mu1>1.0</mu1>
      <mu2>0.5</mu2>
      <fdir1>1 0 0</fdir1>
      <material>Gazebo/Black</material>
    </gazebo>

    <joint name="chassis_to_${prefix}_wheel_joint" type="continuous">
      <parent link="chassis"/>
      <child link="${prefix}_wheel"/>
      <origin
        xyz="${front * front_rear_axle_dist / 2.0}
             ${-side * axle_width / 2.0}
             ${-(chassis_height / 2.0 + ground_clearance - wheel_radius)}"
      />
      <axis xyz="0 1 0"/>
    </joint>

    <transmission name="trans_${prefix}_wheel">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="chassis_to_${prefix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>

  <!-- 
  This creates the lasers.
  
  prefix is to give the lasers different names: front, rear
  front is 1 for front and -1 for rear
  -->
  <xacro:macro name="laser" params="prefix front">
    <link name="${prefix}_laser_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.1 0.1 0.1"/>
        </geometry>
      </collision>
      <visual>
        <origin rpy="0 0 0" />
        <geometry>
          <cylinder length="0.1" radius="0.05" />
        </geometry>
        <material name="Grey"/>
      </visual>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <gazebo reference="${prefix}_laser_link">
      <material>Gazebo/Grey</material>
      <sensor type="ray" name="${prefix}_laser_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>20</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>180</samples>
              <resolution>1</resolution>
              <min_angle>${-PI / 2}</min_angle>
              <max_angle>${PI / 2}</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller"
                filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=${prefix}_laser/scan</remapping>
          </ros>
          <frame_name>${prefix}_laser_link</frame_name>
          <frameName>${prefix}_laser_link</frameName>
          <output_type>sensor_msgs/LaserScan</output_type>
        </plugin>
      </sensor>
    </gazebo>

    <joint name="${prefix}_laser_joint" type="fixed">
      <axis xyz="0 1 0" />
      <xacro:if value="${front == 1}">
        <origin xyz="${front * (chassis_length*0.35)}
                     0
                     ${chassis_height + ground_clearance + 0.1}"
                rpy="0 ${laser_tilt / 180.0 * PI} 0"/>
      </xacro:if>
      <xacro:if value="${front == -1}">
<!--
        <origin xyz="${front * (chassis_length*0.5+0.45)} 0 ${-chassis_height*0.5}"
                rpy="0 0 ${PI}"/>
-->
        </xacro:if>
      <parent link="base_link"/>
      <child link="${prefix}_laser_link"/>
    </joint>
  </xacro:macro>

  <!-- GNSS and IMU -->
  <xacro:macro name="GNSS">
    <link name="gps_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.1 0.1 0.1"/>
        </geometry>
      </collision>
      <visual>
        <origin rpy="0 0 0" />
        <geometry>
          <cylinder length="0.07" radius="0.05" />
        </geometry>
        <material name="Grey"/>
      </visual>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <gazebo reference="gps_link">
      <material>Gazebo/Grey</material>
    </gazebo>
    
    <joint name="GNSS_joint" type="fixed">
      <axis xyz="0 0 1" />
      <origin xyz="0 0 ${top_platform}" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="gps_link"/>
    </joint>

    <link name="imu_link">
      <!-- zero sized as it uses the same box as the GNSS -->
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.0 0.0 0.0"/>
        </geometry>
      </collision>
      <visual>
        <origin rpy="0 0 0" />
        <geometry>
          <cylinder length="0.0" radius="0.0" />
        </geometry>
        <material name="Grey"/>
      </visual>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <gazebo reference="imu_link">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>imu/data</topicName>
          <ros>
            <remapping>imu_plugin/out:=imu/data</remapping>
          </ros>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>10.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>imu_link</frameName>
          <initialOrientationAsReference>false</initialOrientationAsReference>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>

    <joint name="IMU_joint" type="fixed">
      <axis xyz="0 0 1" />
      <origin xyz="0 0 ${top_platform}" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="imu_link"/>
    </joint>
  </xacro:macro>

  <!-- 3D camera for pointcloud -->
  <xacro:macro name="rgbd">
    <link name="rgbd_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.02 0.2 0.02"/>
        </geometry>
      </collision>
      <visual>
        <origin rpy="0 0 0" />
        <geometry>
          <box size="0.04 0.2 0.04" />
        </geometry>
        <material name="Grey"/>
      </visual>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <gazebo reference="rgbd_link">
      <material>Gazebo/Grey</material>
    </gazebo>

    <joint name="rgbd_joint" type="fixed">
      <axis xyz="0 0 1" />
      <origin xyz="0.1 0 ${top_platform}"
              rpy="0 ${rgbd_tilt / 180.0 * PI} 0"/>
      <parent link="base_link"/>
      <child link="rgbd_link"/>
    </joint>

    <xacro:arg name="use_nominal_extrinsics" default="true"/>
    <xacro:include filename="$(find realsense2_description)/urdf/_d455.urdf.xacro" />
    <xacro:sensor_d455 parent="rgbd_link" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:sensor_d455>
  </xacro:macro>
  
  <!--
  Base link to act as a reference.
  -->
  <link name="base_link"/>
  <gazebo reference="base_link">
  </gazebo>
  
  <!--
  Main chassis
  -->
  <link name="chassis">
    <collision>
      <origin xyz="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="100"/>
      <inertia
        ixx="300" ixy="0.0" ixz="0.0"
                  iyy="300" iyz="0.0"
                            izz="300"/>
    </inertial>
  </link>
  <gazebo reference="chassis">
    <material>Gazebo/Green</material>
  </gazebo>

  <joint name="base_link_to_chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin
      xyz="0.0 0.0 ${chassis_height/2.0 + ground_clearance}"
    />
  </joint>

  
  <!-- Wheels -->
  <xacro:wheel prefix="front_right" front="1" side="1" />
  <xacro:wheel prefix="front_left" front="1" side="-1" />
  <xacro:wheel prefix="centre_right" front="0" side="1" />
  <xacro:wheel prefix="centre_left" front="0" side="-1" />
  <xacro:wheel prefix="rear_right" front="-1" side="1" />
  <xacro:wheel prefix="rear_left" front="-1" side="-1" />

  <!-- Lasers -->
  <xacro:laser prefix="front" front="1" />
<!--
  <xacro:laser prefix="rear" front="-1" />
-->

  <xacro:GNSS />


  <xacro:rgbd />
    <gazebo reference="rgbd_link">
    <sensor type="depth" name="camera">
      <update_rate>6.0</update_rate>
      <plugin name="depth_camera" filename="libgazebo_ros_camera.so">
        <frame_name>camera_depth_optical_frame</frame_name>
        <hack_baseline>0.095</hack_baseline>
        <min_depth>0.04</min_depth>
        <max_depth>10.0</max_depth>
        <hfov>87</hfov>
      </plugin>
    </sensor>
  </gazebo>

  <!-- GNSS -->
  <gazebo reference="gps_link">
    <sensor name="gps_sensor" type="gps">
      <always_on>true</always_on>
      <update_rate>1.0</update_rate>
      <plugin name="gps_controller" filename="libgazebo_ros_gps_sensor.so">
        <ros>
          <remapping>gps_controller/out:=gps/fix</remapping>
          <remapping>gps_controller/vel:=gps/vel</remapping>
        </ros>
        <frame_name>gps_link</frame_name>
      </plugin>
    </sensor>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo>
    <xacro:macro name="drive_controller">

      <plugin name="skid_steer_drive_controller"
              filename="libgazebo_ros_skid_steer_drive_6w.so">-->
        <rosDebugLevel>Debug</rosDebugLevel>
        <leftFrontJoint>chassis_to_front_left_wheel_joint</leftFrontJoint>
        <rightFrontJoint>chassis_to_front_right_wheel_joint</rightFrontJoint>
        <leftMiddleJoint>chassis_to_centre_left_wheel_joint</leftMiddleJoint>
        <rightMiddleJoint>chassis_to_centre_right_wheel_joint</rightMiddleJoint>
        <leftRearJoint>chassis_to_rear_left_wheel_joint</leftRearJoint>
        <rightRearJoint>chassis_to_rear_right_wheel_joint</rightRearJoint>
        <wheelSeparation>${axle_width}</wheelSeparation>
        <wheelDiameter>${wheel_radius * 2.0}</wheelDiameter>
        <robotBaseFrame>base_link</robotBaseFrame>
        <torque>1000</torque>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <broadcastTF>true</broadcastTF>
        <covariance_x>0.0001</covariance_x>
        <covariance_y>0.0001</covariance_y>
        <covariance_yaw>0.001</covariance_yaw>
        <updateRate>10.0</updateRate>
      </plugin>

    </xacro:macro>
    <xacro:drive_controller />

  </gazebo>

</robot>

